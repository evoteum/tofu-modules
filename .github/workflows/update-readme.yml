name: Auto-Update Module README

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight
  workflow_dispatch:
  push:
    paths:
      - '*/*/**'  # Any change in subdirectories under namespace/module
      - '!*'      # Ignore changes to the root directory
      

jobs:
  check-tofu-support:
    runs-on: ubuntu-latest
    steps:
      - id: check-terraform-docs-pr
        run: |
          PR_STATUS=$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/pulls/833 | jq -r '.merged')
          if [ "$PR_STATUS" = "true" ]; then
            echo "terraform-docs supports OpenTofu!"
            exit 0
          else
            echo "terraform-docs does not support OpenTofu yet."
            exit 1
          fi

  remove-broken-advisement:
    needs: check-tofu-support
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Remove broken advisement
        run: |
          # Create temp file
          tmp_file=$(mktemp)
          
          # Write to temp file, preserving everything else except terraform-docs advisement section
          awk '
            /\[\/\/\]: # \(BEGIN_TERRAFORM_DOCS_ADVISEMENT\)/ {
              p = 1
              next
            }
            /\[\/\/\]: # \(END_TERRAFORM_DOCS_ADVISEMENT\)/ {
              p = 0
              next
            }
            !p {
              print
            }
          ' README.md > "$tmp_file"
          
          # Replace original file
          mv "$tmp_file" README.md
          
      - name: Commit and push if changed
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add README.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "docs: remove terraform-docs advisement" && git push)

  find-modules:
    needs: check-tofu-support
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - id: find-modules
        run: |
          MODULES=$(find . -mindepth 2 -maxdepth 2 -type d -not -path "*/\.*" | sed 's|^./||' | jq -R -s -c 'split("\n")[:-1]')
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

  update-readme:
    needs: find-modules
    if: needs.find-modules.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.find-modules.outputs.matrix) }}
      max-parallel: 1000
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ matrix.module }}
          sparse-checkout-cone-mode: false    
           
      - name: Debug git state
        run: |
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Remote commit: $(git ls-remote origin main | cut -f1)"
          git status

      - name: Checkout config file
        uses: actions/checkout@v4
        with:
          repository: evoteum/estate-config
          path: config-temp
          sparse-checkout: |
            .terraform-docs.yml
          sparse-checkout-cone-mode: false

      - name: Move config to root
        run: mv config-temp/.terraform-docs.yml .terraform-docs.yml && rm -rf config-temp

      - name: Appease the GitHub Actions gods with a ceremonial git pull. Because reasons ¯\_(ツ)_/¯
        run: |
          echo "Handles an intermittent race condition, even when max-parallel is set to 1."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main

      - uses: terraform-docs/gh-actions@main
        with:
          working-dir: ${{ matrix.module }}
          output-file: README.md
          output-method: inject
          git-push: "true"
          git-commit-message: "docs: update module documentation"
      - name: Debug git state
        run: |
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Remote commit: $(git ls-remote origin main | cut -f1)"
          git status
