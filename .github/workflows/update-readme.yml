name: Auto-Update Module README

on:
  push:
    paths:
      - '*/*/**'  # Any change in subdirectories under namespace/module
      - '!*'      # Ignore changes to the root directory
      

jobs:
  find-modules:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - id: find-modules
        run: |
          MODULES=$(find . -mindepth 2 -maxdepth 2 -type d | sed 's|^./||' | jq -R -s -c 'split("\n")[:-1]')
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

  update-readme:
    needs: find-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJson(needs.find-modules.outputs.matrix) }}
      max-parallel: 1
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history for better merging
      
      - name: Debug git state
        run: |
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Remote commit: $(git ls-remote origin main | cut -f1)"
          git status

      - name: Checkout config file
        uses: actions/checkout@v4
        with:
          repository: evoteum/estate-config
          path: config-temp
          sparse-checkout: |
            .terraform-docs.yml
          sparse-checkout-cone-mode: false

      - name: Move config to root
        run: mv config-temp/.terraform-docs.yml .terraform-docs.yml && rm -rf config-temp

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - uses: terraform-docs/gh-actions@main
        with:
          working-dir: ${{ matrix.module }}
          output-file: README.md
          output-method: inject
          git-push: "true"
          git-commit-message: "docs: update module documentation"

      - name: Debug git state
        run: |
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Remote commit: $(git ls-remote origin main | cut -f1)"
          git status